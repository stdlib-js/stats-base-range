{"version":3,"file":"index.mjs","sources":["../lib/range.js","../lib/main.js","../lib/ndarray.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Computes the range of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} range\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = range( N, x, 1 );\n* // returns 4.0\n*/\nfunction range( N, x, stride ) {\n\tvar max;\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\tif ( isnan( x[ 0 ] ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn 0.0;\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tmin = x[ ix ];\n\tmax = min;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min ) {\n\t\t\tmin = v;\n\t\t} else if ( v > max ) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\treturn max - min;\n}\n\n\n// EXPORTS //\n\nexport default range;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport range from './range.js' ;\nimport ndarray from './ndarray.js' ;\n\n\n// MAIN //\n\nsetReadOnly( range, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default range;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Computes the range of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} range\n*\n* @example\n* import floor from '@stdlib/math-base-special-floor' ;\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = range( N, x, 2, 1 );\n* // returns 6.0\n*/\nfunction range( N, x, stride, offset ) {\n\tvar max;\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\tif ( isnan( x[ offset ] ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn 0.0;\n\t}\n\tix = offset;\n\tmin = x[ ix ];\n\tmax = min;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min ) {\n\t\t\tmin = v;\n\t\t} else if ( v > max ) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\treturn max - min;\n}\n\n\n// EXPORTS //\n\nexport default range;\n"],"names":["range","N","x","stride","max","min","ix","v","i","NaN","isnan","setReadOnly","offset"],"mappings":";;4MA0CA,SAASA,EAAOC,EAAGC,EAAGC,GACrB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKP,GAAK,EACT,OAAOQ,IAER,GAAW,IAANR,GAAsB,IAAXE,EACf,OAAKO,EAAOR,EAAG,IACPO,IAED,EASR,IADAL,EADAC,EAAMH,EAJLI,EADIH,EAAS,GACP,EAAEF,GAAKE,EAER,GAIAK,EAAI,EAAGA,EAAIP,EAAGO,IAAM,CAGzB,GADAD,EAAIL,EADJI,GAAMH,GAEDO,EAAOH,GACX,OAAOA,EAEHA,EAAIF,EACRA,EAAME,EACKA,EAAIH,IACfA,EAAMG,GAGR,OAAOH,EAAMC,EChDdM,EAAAX,EAAA,WCgBA,SAAgBC,EAAGC,EAAGC,EAAQS,GAC7B,IAAIR,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKP,GAAK,EACT,OAAOQ,IAER,GAAW,IAANR,GAAsB,IAAXE,EACf,OAAKO,EAAOR,EAAGU,IACPH,IAED,EAKR,IADAL,EADAC,EAAMH,EADNI,EAAKM,GAGCJ,EAAI,EAAGA,EAAIP,EAAGO,IAAM,CAGzB,GADAD,EAAIL,EADJI,GAAMH,GAEDO,EAAOH,GACX,OAAOA,EAEHA,EAAIF,EACRA,EAAME,EACKA,EAAIH,IACfA,EAAMG,GAGR,OAAOH,EAAMC"}